# Nginx配置文件 - 表白网站 (优化版)
# 支持HTTP/2, Brotli压缩, 高级缓存策略

# 全局配置
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # MIME类型
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # 访问频率限制
    limit_req_zone $binary_remote_addr zone=love:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # 上游服务器配置（如果有API）
    upstream love_backend {
        server 127.0.0.1:3000;
        keepalive 32;
    }
    
    # HTTP服务器 - 重定向到HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name your-domain.com www.your-domain.com;
        
        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 重定向所有HTTP请求到HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS服务器 - 主配置
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name your-domain.com www.your-domain.com;
        
        # SSL证书配置
        ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/your-domain.com/chain.pem;
        
        # 高级SSL安全配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
    
        # 高级安全头配置
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self';" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # 网站根目录
        root /var/www/love-website;
        index index.html index.htm;
        
        # 日志配置
        access_log /var/log/nginx/love-website.access.log main;
        error_log /var/log/nginx/love-website.error.log warn;
    
        # 访问频率限制
        limit_req zone=love burst=20 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        # 主要位置配置
        location / {
            try_files $uri $uri/ =404;
            
            # 启用Brotli压缩
            brotli on;
            brotli_comp_level 6;
            brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        }
        
        # HTML文件缓存策略
        location ~* \.(html|htm)$ {
            expires 1h;
            add_header Cache-Control "public, no-transform, must-revalidate";
            add_header Vary "Accept-Encoding";
        }
        
        # 静态资源缓存 - 长期缓存
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            access_log off;
            
            # 启用Brotli压缩
            brotli on;
            brotli_comp_level 6;
        }
        
        # 字体文件缓存
        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            access_log off;
        }
        
        # API代理（如果需要）
        location /api/ {
            proxy_pass http://love_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }
    
        # 高级Gzip压缩配置
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            application/rss+xml
            application/ld+json
            image/svg+xml
            font/woff
            font/woff2;
        
        # 防止访问敏感文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 防止访问备份文件
        location ~ \.(bak|backup|old|orig|save|swp|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 监控面板
        location /monitoring {
            alias /var/www/love-website/monitoring.html;
            expires 5m;
            add_header Cache-Control "public, no-transform";
        }
    }
}